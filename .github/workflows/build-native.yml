name: Test Upload Functionality

on:
  push:
    branches:
      - develop-native  

jobs:
  upload-test:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout repository
      - name: Checkout repository
        uses: actions/checkout@v2

      # Step 2: Create a test file
      - name: Create a test file
        run: echo "Este Ã© um teste de upload." > test-upload.txt

      # Step 3: Upload the test file to Azure VM
      - name: Upload Test File to Azure VM
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.THARSEO_BACKEND_HOST }}
          username: ${{ secrets.THARSEO_BACKEND_HOST_USER }}
          password: ${{ secrets.THARSEO_BACKEND_PASS }}
          port: 22
          source: test-upload.txt
          target: /home/richardguedes/tharseo/data/

      # Step 4: Start a simple HTTP server on the VM
      - name: Start Simple HTTP Server on Azure VM
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.THARSEO_BACKEND_HOST }}
          username: ${{ secrets.THARSEO_BACKEND_HOST_USER }}
          password: ${{ secrets.THARSEO_BACKEND_PASS }}
          script: |
            cd /home/richardguedes/tharseo/data
            nohup python3 -m http.server 8500 &

      # Step 5: Notify with the download link
      - name: Notify with Download Link
        run: |
          FILE_URL="http://${{ secrets.THARSEO_BACKEND_HOST }}:8500/test-upload.txt"
          MESSAGE="ðŸŽ‰ O arquivo estÃ¡ disponÃ­vel para download! VocÃª pode baixÃ¡-lo [aqui](${FILE_URL})."
          curl -s -X POST https://api.telegram.org/bot${{ secrets.TELEGRAM_BOT_TOKEN }}/sendMessage \
            -d chat_id=${{ secrets.TELEGRAM_CHAT_ID }} \
            -d text="${MESSAGE}" \
            -d parse_mode="Markdown"
