name: Build React Native Android

on:
  push:
    branches:
      - develop-native  

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout repository
      - name: Checkout repository
        uses: actions/checkout@v2

      # Step 2: Notify that the deploy has started
      - name: Notify that deploy has started
        run: |
          MESSAGE="üöÄ Um deploy MOBILE na branch *develop-native* foi iniciado! A previs√£o para conclus√£o √© de 12 minutos."
          curl -s -X POST https://api.telegram.org/bot${{ secrets.TELEGRAM_BOT_TOKEN }}/sendMessage \
          -d chat_id=${{ secrets.TELEGRAM_CHAT_ID }} \
          -d text="${MESSAGE}" \
          -d parse_mode="Markdown"

      # Step 3: Set up Node.js
      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '18'
          
      # Step 4: Install Java 17
      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          java-version: '17'
          distribution: 'temurin' 

      # Step 5: Install dependencies
      - name: Install dependencies
        run: npm install

      # Step 6: Install React Native CLI
      - name: Install React Native CLI
        run: npm install -g react-native-cli

      # Step 7: Clean Gradle Cache and Build the Android app
      - name: Build Android App
        env:
          GRADLE_OPTS: "-Xmx2048m" 
        run: |
          cd android
          chmod +x ./gradlew  # Garantir permiss√µes de execu√ß√£o
          ./gradlew clean assembleDebug --info  # Executa a limpeza e constr√≥i com mais informa√ß√µes

      # Step 8: Create a new release and upload the APK
      - name: Create Release and Upload APK
        uses: softprops/action-gh-release@v1
        with:
          tag_name: v1.${{ github.run_number }}  # Use a vers√£o desejada
          release_name: Release v1.${{ github.run_number }}
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Token do GitHub
        # Upload the APK file
        with:
          files: android/app/build/outputs/apk/debug/app-debug.apk

      # Step 9: Notify on successful build with link to APK
      - name: Notify on success with link to APK
        run: |
          TAG="v1.${{ github.run_number }}"  # Use a vers√£o desejada
          APK_URL="https://github.com/${{ github.repository }}/releases/download/${TAG}/app-debug.apk"  # URL completa do APK
          MESSAGE="üéâ A nova vers√£o de desenvolvimento do aplicativo foi constru√≠da com sucesso! Voc√™ pode baixar o APK [aqui](${APK_URL})."
          curl -s -X POST https://api.telegram.org/bot${{ secrets.TELEGRAM_BOT_TOKEN }}/sendMessage \
          -d chat_id=${{ secrets.TELEGRAM_CHAT_ID }} \
          -d text="${MESSAGE}" \
          -d parse_mode="Markdown"

      # Step 10: Notify on failure
      - name: Notify on failure
        if: failure()
        run: |
          MESSAGE="üö® Ocorreu um erro durante o processo de build do aplicativo!\nPor favor, verifique os logs para mais informa√ß√µes."
          curl -s -X POST https://api.telegram.org/bot${{ secrets.TELEGRAM_BOT_TOKEN }}/sendMessage \
          -d chat_id=${{ secrets.TELEGRAM_CHAT_ID }} \
          -d text="${MESSAGE}" \
          -d parse_mode="Markdown"
